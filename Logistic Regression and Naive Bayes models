# Classification template

# Importing the dataset
dataset = classData

write.csv(classData,file = "classData.csv")


# Splitting the dataset into the Training set and Test set
install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Exited, SplitRatio = 0.75)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)

# Feature Scaling
training_set[1] = scale(training_set[1])
training_set[4] = scale(training_set[4])
training_set[6] = scale(training_set[6])
training_set[9] = scale(training_set[9])

test_set[1] = scale(test_set[1])
test_set[4] = scale(test_set[4])
test_set[6] = scale(test_set[6])
test_set[9] = scale(test_set[9])


# Fitting Logistic Regression classifier to the Training set
# Create your classifier here

classifier = glm(formula = Exited~.,
                 family = binomial,
                 data = training_set)


# Predicting the Test set results
prob_pred = predict(classifier,type = 'response', newdata = test_set[-10])
y_pred = ifelse(prob_pred>0.5, 1, 0)

confusionMatrix(as.factor(y_pred), as.factor(test_set$Exited), positive = "1")

# Fitting Naive Bayes classifier to the Training set
# Create your classifier here


install.packages("e1071")
library(e1071)
classifier = naiveBayes(x=training_set[-10],
                        y= training_set$Exited) 


# Predicting the Test set results
prob_pred = predict(classifier, newdata = test_set[-10])

confusionMatrix(as.factor(prob_pred), as.factor(test_set$Exited), positive = "1")
